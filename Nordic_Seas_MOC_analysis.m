%% plot stations in southern Norwegian Sea and Rockall Trough
% this is followed by yearly_BC_transport.m for further figures

addpath /System/Volumes/Data/MATLAB_VI/PO_Toolbox/
addpath /System/Volumes/Data/MATLAB_VI/PO_Toolbox/date_routines
addpath /System/Volumes/Data/MATLAB_VI/PO_Toolbox/seawater
addpath /System/Volumes/Data/MATLAB_VI/PO_Toolbox/nansuite
addpath /System/Volumes/Data/MATLAB_VI/Nuka_Arctica_75
addpath /System/Volumes/Data/MATLAB_VI/m_map

clear
% close all

if 1
    figure(1)
    load /System/Volumes/Data/MATLAB_VI/m_map_plots/NE_Atl_UK.mat
    lon = lon + 360;        % make longitude pos west. 
    J = lon > 360;
    lon(J) = lon(J) - 360;

    %indx = 421:661;       	% 2 - 10°W
    %indy = 1:151;          % 67-62°N  
    indx = 121:721;         % 0 - 20°W
    indy = 1:391;           % 67-54°N

    depths=data;
    vlon = lon;
    vlat = lat;

    lat1 = 54;
    lat2 = 67;
    lon1 = 340;
    lon2 = 360;

    jj=find((vlon < lon2) & (vlon > lon1));
    jjmin = min(jj); jjmax = max(jj);
    vlon = vlon(jj);

    kk = find((vlat < lat2) & (vlat > lat1));
    kkmin = min(kk); kkmax = max(kk);
    vlat = vlat(kk);

    depths = depths(kkmin:1:kkmax,jjmin:1:jjmax);
    step = 1;
    vvlat = vlat;
    vvlon = vlon;

    whitebg('white')

    set(gcf,'DefaultAxesFontSize',14,'DefaultTextFontSize',14)

    set(gcf, 'Units', 'inches', 'PaperUnits', 'inches', .....
         'PaperOrientation','landscape', 'Position', [1 1 11 8.5],...
         'PaperPosition', [0 0 11 8.5]);

    m_proj('merc', 'lon', [340 360], 'lat', [54 67]);

    set(0,'DefaultLineLineWidth',[0.1]);

    %V = [-3500 -3000 -2500 -2000 -1500 -1000 -200];
    V = [-3000 -2000 -1000 -500 -200 -100 -50 0 1];
    [c,h] = m_contourf(vvlon,vvlat,depths,V);

    hold on
    shading flat
    cmap = [225 250 250; 200 225 250; 175 200 250; 150 175 250; ...
           125 150 250; 100 125 250; 75 100 250; 50 75 250]/255; 
    colormap((cmap))

    m_gshhs_i('patch',[1.0 .7 0]);

    m_grid('xtick',5,'fontsize',12,'linewidth',1.5); 

    h = xlabel('longitude ')
    set(h,'fontname','times','fontweight','bold','fontsize',16)
    h = ylabel('latitude ')
    set(h,'fontname','times','fontweight','bold','fontsize',16)
end

%% load final data set for southern Norwegian Sea and Rockall Trough
cd /System/Volumes/Data/MATLAB_VI/Norrona/ICES_Hydro/
%load Southern Norwegian Sea_final_set  % stn_date lon lat dpth temp salt dyn chi
%load South_Nor_Sea_final_set_500        % to 500 m only or 800 or 850 (these start 1980)
load South_Nor_Sea_to_2022_500 
ns = length(dpth);

% file generated by merged_southern_Nor_Sea.m  This code merged earlier 
% data from ICES (south_Nor_Sea_casts.m) with later data provided by Léon 
% and preprocessed using Resample_south_Norwegian_hydro.m.
% keep stations between 63-66°N and 3-7°W. More specifically:
xb = -[2 5 6.5 6.5 2 2];
yb = [63.55 63.55 64 66 66 63.55];
J = inside3(lon,lat,xb,yb);
J = ~isnan(J);
ns = length(dpth);

date_NS = stn_date(J);
lon_NS = lon(J);
lat_NS = lat(J);
temp_NS = temp(:,J);
salt_NS = salt(:,J);
dyn_NS = dyn(:,J);
chi_NS = chi(:,J);
% sort by time
[date_NS,I] = sort(date_NS);
lon_NS = lon_NS(I);
lat_NS = lat_NS(I);
temp_NS = temp_NS(:,I);
salt_NS = salt_NS(:,I);
dyn_NS = dyn_NS(:,I);
chi_NS = chi_NS(:,I);

if 1
    disp('show NS sites used')
    figure(1)
    m_plot(360+lon_NS,lat_NS,'*b')
end


clear stn_date lon lat temp salt dyn chi

cd /System/Volumes/Data/MATLAB_VI/Norrona/ICES_Hydro/
%load Rockall_final_set          % stn_date lon lat dpth temp salt dyn chi
%load Rockall_final_set_500       % to 500 m only or 800 or 850
load Rockall_to_2022_500
% file generated by merged_Rockall.m This code merged earlier data from
% ICES (Rockall_old_casts.m) with later data provided by Léon and
% preprocessed using Resample_Rockall_hydro.m 
% use stations within this area:
% stations over and near Anton Dorhn Seamount 57.1 to 57.8°N have already
% been removed.
xb = -[10.5  14.5  13.3  12.5  12.5  12.8  13.0  10   10   9.5 9.5 10.5];
yb = [55.5  55.5  57.0  57.4  57.8  58    58.5  58.5 57.5 57  56  55];
J = inside3(lon,lat,xb,yb);
J = ~isnan(J);
% save these stations
date_RT = stn_date(J);
lon_RT = lon(J);
lat_RT = lat(J);
temp_RT = temp(:,J);
salt_RT = salt(:,J);
dyn_RT = dyn(:,J);
chi_RT = chi(:,J);
% sort by time
[date_RT,I] = sort(date_RT);
lon_RT = lon_RT(I);
lat_RT = lat_RT(I);
temp_RT = temp_RT(:,I);
salt_RT = salt_RT(:,I);
dyn_RT = dyn_RT(:,I);
chi_RT = chi_RT(:,I);

if 1
    disp('show RT sites used')
    figure(1)
    m_plot(360+lon_RT,lat_RT,'*r')
end
clear stn_date lon lat temp salt dyn chi
return

% figure(1) this figure is done
% m_plot(360-lon_NS,lat_NS,'.r','markersize',10)         % station locations
% m_plot(360-lon_RT,lat_RT,'.r','markersize',10)         % station locations

%%
% Take annual averages to put data or a more equal footing, but first
% remove annual cycle of dynamic height
[yrNS,moNS,dyNS] = datevec(date_NS);
[yrRT,moRT,dyRT] = datevec(date_RT);

dayNS = yrday(yrNS,moNS,dyNS);
dayRT = yrday(yrRT,moRT,dyRT);

% disp('seasonal amp (NS)')
% deseason - loop through all depths for NS
ti = dayNS/365;
figure(36)
plot(ti,dyn_NS(25,:),'ok')
hold on
for i = 1:length(dpth)
%    inp = ~isnan(dyn_NS(i,:));
%    X = get_sine_fit(ti(inp),dyn_NS(i,inp));
%    [i X(1) sqrt(X(2)^2+X(3)^2)];       % amplitude = 2.4 cm
%    dyn_NS(i,:) = dyn_NS(i,:) - (X(2)*cos(ti*2*pi) + X(3)*sin(ti*2*pi));

    dyn_NS(i,:) = deseason(ti,dyn_NS(i,:),2);
end
plot(ti,dyn_NS(25,:),'r+')
grid on

% disp('seasonal amp (RT)')
% deseason - loop through all depths for RT
ti = dayRT/365;
figure(37)
plot(ti,dyn_RT(25,:),'.k')
hold on
for i = 1:length(dpth)
%    inp = ~isnan(dyn_RT(i,:));
%    X = get_sine_fit(ti(inp),dyn_RT(i,inp));
%    [i X(1) sqrt(X(2)^2+X(3)^2)];       % amplitude = 3.6 cm
%    dyn_RT(i,:) = dyn_RT(i,:) - (X(2)*cos(ti*2*pi) + X(3)*sin(ti*2*pi));

    dyn_RT(i,:) = deseason(ti,dyn_RT(i,:),2);

end
plot(ti, dyn_RT(25,:),'r+')
grid on


% now have deseasoned dyn height for both NS an RT
% First, Norwewgian Sea: 
%%%%%% choose depth %%%%%% 
n = 25;   % say 500 m (closest to Norröna)
%

[yrNS,mo,dy] = datevec(date_NS);
[yrRT,mo,dy] = datevec(date_RT);

for i = 1900:2022 
    k = find(yrNS == i);
    mean_dyn_NS(i) = NaN;
    mean_dyn_NS(i) = mean(dyn_NS(n,k));    % dyn hgt at depth n
    std_dyn_NS(i) = std(dyn_NS(n,k))/sqrt(length(k));
    date_year_NS(i) = datenum(i,7,1);
    mn_dyn_NS(i) = mean_dyn_NS(i);
    N_NS(i) = length(k);
    
    j = find(yrRT == i);
    [i length(j)];
    mean_dyn_RT(i) = NaN;
    mean_dyn_RT(i) = mean(dyn_RT(n,j));    % dyn hgt at depth n
    std_dyn_RT(i) = std(dyn_RT(n,j))/sqrt(length(j));
    date_year_RT(i) = datenum(i,7,1);
    mn_dyn_RT(i) = mean_dyn_RT(i);
    N_RT(i) = length(j);
end


if 1
    figure(14)
    subplot(2,1,2)
    datemin = datenum(1900,1,1); datemax = datenum(2022,12,31);
    J = date_year_NS > 0;
    semilogy(date_year_NS(J),N_NS(J),'b*','markersize',5)
    hold on
    K = date_year_RT > 0;
    semilogy(date_year_RT(K),N_RT(K),'rs','markersize',5)
    axis([datemin datemax 1 500])
    datetick('x',10)
    grid on
    xlabel('year','fontsize',16)
    ylabel('N','fontsize',16)
    title('Number of stations per year','fontsize',16)
end

datemin = datenum(1900,1,1); datemax = datenum(2022,12,31);
figure(14)
subplot(2,1,1)

J = date_year_NS > 0 & mean_dyn_NS < 0.35;
errorbar(date_year_NS(J),mean_dyn_NS(J),std_dyn_NS(J),'-.b','markersize',30)
hold on
% plot(date_year_NS(J),mean_dyn_NS(J),'.b','markersize',10)

K = date_year_RT > 0 & mean_dyn_RT < 1.5;
errorbar(date_year_RT(K),mean_dyn_RT(K),std_dyn_RT(K),'-.r','markersize',30)
hold on
% plot(date_year_RT(K),mean_dyn_RT(K),'.r','markersize',10)
grid on
axis([datemin datemax 0 0.6])
datetick('x',10)

% [mean(mean_dyn_NS(J)) mean(mean_dyn_RT(K))]
grid on
hold off
xlabel('year','fontsize',16)
ylabel('dyn. hgt. (m^2s^-^2)','fontsize',16)
title('dyn. hgt. at 500 m','fontsize',16)

% 500 and 800 agree here
% return
% trend analysis on dyn hgt
figure(14)
hold on
subplot(2,1,1)
J = date_year_NS >= datenum(1950,1,1) & mean_dyn_NS < 0.21 & N_NS >= 2;
P = polyfit(date_year_NS(J),mean_dyn_NS(J),1);
disp('NS 100 year trend and last point')
P(1)*365*100
DH_NS = polyval(P,date_year_NS);
DH_NS(end)
plot(date_year_NS,DH_NS,'--k','linewidth',1)
DH_NS = polyval(P,date_year_NS(J));
plot(date_year_NS(J),DH_NS,'k','linewidth',1)

K = date_year_RT >= datenum(1950,1,1) & mean_dyn_RT < 0.5 & N_RT >= 2;
P = polyfit(date_year_RT(K),mean_dyn_RT(K),1);
disp('Rockall Trough 100 year trend and last point')
P(1)*365*100
DH_RT = polyval(P,date_year_RT);
DH_RT(end)
plot(date_year_RT,DH_RT,'--k','linewidth',1)
DH_RT = polyval(P,date_year_RT(K));
plot(date_year_RT(K),DH_RT,'k','linewidth',1)
text(datenum(1980,1,1),0.32,'slope = 0.060m/100 years')
text(datenum(1980,1,1),0.22,'slope = 0.016m/100 years')
axis([datemin datemax 0 0.6])


%%%%%%%%% plot dynamic heights for 1993 - present for comparison with SSH
if 0
    datemin = datenum(1992,1,1); datemax = datenum(2022,12,31);
    figure(140)
    subplot(2,1,1)
    J = date_year_NS > 0 & mean_dyn_NS < 0.35;
    errorbar(date_year_NS(J),mean_dyn_NS(J),std_dyn_NS(J),'-ob','markersize',10)
    hold on
    plot(date_year_NS(J),mean_dyn_NS(J),'ob','markersize',10)

    K = date_year_RT > 0 & mean_dyn_RT < 1.5;
    errorbar(date_year_RT(K),mean_dyn_RT(K),std_dyn_RT(K),'-or','markersize',10)
    hold on
    plot(date_year_RT(K),mean_dyn_RT(K),'or','markersize',10)
    axis([datemin datemax 0 0.9])
    datetick('x',10)
    NS_yr = date_year_NS(J); NS_dy = mean_dyn_NS(J); 
    RT_yr = date_year_RT(K); RT_dy = mean_dyn_RT(K);
    % save dyn_hgt_file NS_yr NS_dy RT_yr RT_dy
    % [mean(mean_dyn_NS(J)) mean(mean_dyn_RT(K))]
    grid on
    axis([datenum(1992,1,1)  datenum(2023,1,1) 0 0.9])
    xlabel('year','fontsize',16)
    ylabel('dyn. hgt. (m^2s^-^2)','fontsize',16)
    title('dyn. hgt. at 850 m','fontsize',16)
% linear least square fit to estimate possible trend
    disp('NS')
    t1 = datenum(1993,1,1); t2 = datenum(2022,12,31);
    P = polyfit(date_year_NS(J),mean_dyn_NS(J),1);
    P(1)*26*365
    yy = polyval(P,[t1 t2])
    plot([t1 t2],yy,'k','linewidth',1)
% mean and change: 0.1499   +0.0043    
    disp('RT')
    P = polyfit(date_year_RT(K),mean_dyn_RT(K),1);
    P(1)*26*365
    yy = polyval(P,[t1 t2])
    plot([t1 t2],yy,'k','linewidth',1)
% mean and change: 0..7089   +0.045    
    return
end
%%%%%%%%%%%%%


% here can run yearly_BC_transport.m  to get baroclinic transport for each
% year when average DH is available for both NS and RT. It will use the
% data prepared at this point. 

% close all
%% dynamic height difference -> transport
% get mean over all profiles in recent time (2000-present, say)
% to get dynamic height profiles for geostrophic velocity and transport
figure(15)
% plot([0 0],[0 850],'k','linewidth',0.01)
plot([0 0],[0 350],'k',[0 0],[600 850],'k','linewidth',0.01)
hold on

disp('double check period of interest and data files used')
% pause
%%%%%% define period for average %%%%%%
yrSt = 2009; yrEn = 2022;
%
%
J = yrNS >= yrSt & yrNS <= yrEn;
mean_dh_NS = nanmean(dyn_NS(:,J),2);
std_dh_NS = nanstd(dyn_NS(:,J),2);
% disp('NS dyn hgt stats')
% [length(J) sum(J)]
% [mean_dh_NS std_dh_NS]
K = yrRT >= yrSt & yrRT <= yrEn;
mean_dh_RT = nanmean(dyn_RT(:,K),2);
std_dh_RT = nanstd(dyn_RT(:,K),2);
% disp('RT dyn hgt stats')
% [length(K) sum(K)]
% [mean_dh_RT std_dh_RT]


plot(mean_dh_NS,dpth,'*-b',mean_dh_RT,dpth,'*-r')
set(gca,'ydir','reverse')
grid on
axis([-.6 0.8 0 850])
% xlabel('dyn. hgt. (m^2s^-^2), velocity (ms^-^1)*10','fontsize',16)
xlabel('dyn. hgt. (m^2s^-^2), transport (Sv)*0.1','fontsize',16)
ylabel('depth (m)','fontsize',16)
% title('de-seasoned dyn. hgt., velocity','fontsize',16)
title('de-seasoned dyn. hgt. and transport','fontsize',16)

eff = 4*pi/86400*sind(60);
del_z = diff(dpth);

dist = 821e3;  % ~separation between two regions (no matter, will cancel out)
vel=10/eff/dist*(mean_dh_RT - mean_dh_NS);		% geostr. vel. (10 compensates for
vel_err = 10/eff/dist*sqrt(std_dh_RT.^2 + std_dh_NS.^2);
hold on
% plot(-vel*10,dpth,'--k')
fractional_err = vel_err./vel;
[vel vel_err fractional_err];
% plot(-(vel-0.0299)*10,dpth,'--k')

% return

% uncertainty in dynamic estimate of transport is very small.
% The fractional standard deviation is 10% at 475 m depth. There are 300+
% profiles in NS and 400 profiles in RT. Most of them are probably
% independent (esp. if Argo profiles). So let's assume 100 DoF to be on
% safe side. This implies that standard error will be ~10%/sqrt(100) ~ 1%. 
% Since the profile variations are very likely coherent in the vertical we
% can assume transport uncertainty will be similar, i.e. at the 1% level.
% To the degree they are not coherent in the vertical there will be 
% additional DoF we don't include of know about. 

% integrate up and down from level n

dpth(1) = 0;
% reinterpret to 1 m steps
dpths = 0:1:850;
Trn = interp1(dpth,vel,dpths)*dist/1e6;
[dpths' Trn'];

n = 490;                    % index = 490  for depth = 489 where vel = 0;
vel = Trn(n) - Trn;     % referenced velocity  
A(n) = 0;
zed(n) = dpths(n);

% sum towards surface:
for i = n:-1:2
    A(i-1) = vel(i-1) + A(i); 
    zed(i-1) = dpths(i-1);
end

% sum to max depth
m = 851;
for i = n:m-1
    A(i+1) = vel(i+1) + A(i); 
    zed(i+1) = dpths(i+1);
end

figure(15)
hold on
upr = 826;
plot(A(1:upr)*0.1,zed(1:upr),'k','linewidth',2)     % limit curve to 825 m
plot(A(1:20:upr)*0.1,zed(1:20:upr),'*k','linewidth',2)

set(gca,'ydir','reverse')


if 0
% In this section review dyn hgt diff relative to reference depth
% where mean dynamic height difference = 0.3175
    mean_diff = mean_dh_RT - mean_dh_NS - 0.3175;
    figure(12)
    plot(mean_diff,dpth)
    set(gca,'ydir','reverse')
    grid on
    [dpth(24:39) mean_diff(24:39)];
% At 756 m depth (dyn hgt index = 35, 750 m) where transport = 2.2 Sv, 
% the dynamic height difference = 0.194 m. But at 825 m to include all 
% transport the difference = 0.252 m. This indicates an 'excess' head 
% of 0.058 m to drive the hydraulic (non-geostrophic) overflow. 
% This is based on putting dyn hgt diff = 0 at 500 m. 
end



%% look at temporal change in temperature - upper ocean but first remove
% annual cycle since sampling is nonuniform throughout the year
[yrNS,moNS,dyNS] = datevec(date_NS);
[yrRT,moRT,dyRT] = datevec(date_RT);

dayNS = yrday(yrNS,moNS,dyNS);
dayRT = yrday(yrRT,moRT,dyRT);

% monthly fit - loop through all depths for NS
ti = dayNS/365;
for i = 1:length(dpth)
        temp_NS(i,:) = deseason(ti,temp_NS(i,:),2);
        salt_NS(i,:) = deseason(ti,salt_NS(i,:),2);
end
% monthly fit - loop through all depths for RT
ti = dayRT/365;
for i = 1:length(dpth)
        temp_RT(i,:) = deseason(ti,temp_RT(i,:),2);
        salt_RT(i,:) = deseason(ti,salt_RT(i,:),2);
end

disp('got here')
clear date_year_NS date_year_RT
mean_tmp_NS = [];
mean_slt_NS = [];
mean_tmp_RT = [];
mean_slt_RT = [];

% Get upper layer heat storage as fcn of time:
lvls = 1:25;
n = 25;
temp_NS_zmean = sum_Z(dpth(lvls),temp_NS(lvls,:))/dpth(n);
salt_NS_zmean = sum_Z(dpth(lvls),salt_NS(lvls,:))/dpth(n);
temp_RT_zmean = sum_Z(dpth(lvls),temp_RT(lvls,:))/dpth(n);
salt_RT_zmean = sum_Z(dpth(lvls),salt_RT(lvls,:))/dpth(n);

for i = 1950:2022 
    k = find(yrNS == i);
    mean_tmp_NS(i) = mean(temp_NS_zmean(k));
    mean_slt_NS(i) = mean(salt_NS_zmean(k));
    date_year_NS(i) = datenum(i,7,1);
    
    j = find(yrRT == i);
    mean_tmp_RT(i) = mean(temp_RT_zmean(j));
    mean_slt_RT(i) = mean(salt_RT_zmean(j));
    date_year_RT(i) = datenum(i,7,1);
end

figure(23)
yrs = 1950:2022;
plot(date_year_NS(yrs),mean_tmp_NS(yrs),'b',date_year_RT(yrs),mean_tmp_RT(yrs),'r')
datetick('x',10)
axis([datenum(1950,1,1) datenum(2023,1,1) 2 11])
grid on
xlabel('year','fontsize',16)
ylabel('temperature (°C)','fontsize',16)
title('vertically averaged temperature','fontsize',16)


figure(24)
plot(date_year_NS(yrs),mean_slt_NS(yrs),'b',date_year_RT(yrs),mean_slt_RT(yrs),'r')
datetick('x',10)
axis([datenum(1950,1,1) datenum(2023,1,1) 34.8 35.5])
grid on
xlabel('year','fontsize',16)
ylabel('salinity','fontsize',16)
title('vertically averaged salinity','fontsize',16)



%
figure(16)
J = date_year_NS > 0;
upp_lyr_mean_temp_NS = mean(mean_tmp_NS(:,J),1);
upp_lyr_mean_temp_RT = mean(mean_tmp_RT(:,J),1);
plot(date_year_NS(J),upp_lyr_mean_temp_NS,'*-','markersize',10)
axis([datemin datemax 0 12])
datetick('x',10)
grid on
hold on
K = date_year_RT > 0;
plot(date_year_RT(K),upp_lyr_mean_temp_RT,'*-','markersize',10)
datetick('x',10)
hold off
xlabel('year','fontsize',16)
ylabel('temperature (°C)','fontsize',16)
title('de-seasoned 0-500 m mean temperature','fontsize',16)

%
figure(17)
J = date_year_NS > 0;
upp_lyr_mean_salt_NS = mean(mean_slt_NS(:,J),1);
upp_lyr_mean_salt_RT = mean(mean_slt_RT(:,J),1);
plot(date_year_NS(J),upp_lyr_mean_salt_NS,'*-','markersize',10)
axis([datemin datemax 34.8 35.5])
datetick('x',10)
grid on
hold on
K = date_year_RT > 0;
plot(date_year_RT(K),upp_lyr_mean_salt_RT,'*-','markersize',10)
datetick('x',10)
hold off
xlabel('year','fontsize',16)
ylabel('salinity','fontsize',16)
title('de-seasoned 0-500 m mean salinity','fontsize',16)

% return
if 0 
% recompute dynamic heights as a further check based on final T/S fields
% NS:
    figure(19)
    dyhgt_NS = sw_gpan(mean_slt_NS,mean_tmp_NS,dpth)/10;	% dyn. hgt anom.
    plot(date_year_NS,dyhgt_NS(25,:),'*-','markersize',10)
    datetick('x',10)
    grid on
    hold on
% RT:
    dyhgt_RT = sw_gpan(mean_slt_RT,mean_tmp_RT,dpth)/10;	% dyn. hgt anom. 
    plot(date_year_RT,dyhgt_RT(25,:),'*-','markersize',10)
    axis([datemin datemax 0.1 0.6])
    return
end

%% TS plots for NS and RT, NS first
figure(17)
run sig_tau.m
hold on
plot(salt_NS,temp_NS,'.')
axis([34.5 35.5 -2 12])
grid on
xlabel('salinity','fontsize',16)
ylabel('temperature (°C)','fontsize',16)
title('T/S plot for NS','fontsize',16)

% now RT
figure(18)
run sig_tau.m
hold on
d_indx = [3 9 13 15];    % 10m 100m 200m 400m
kolor = 'krgb';
for i = 1:4
    j = d_indx(i);
    S = salt_RT(j,:); T = temp_RT(j,:);
    plot(S,T,'.','markersize',4,'color',kolor(i))
end
axis([35.1 35.6 8 17])
grid on
xlabel('salinity','fontsize',16)
ylabel('temperature (°C)','fontsize',16)
title('de-seasoned T/S diagram for Rockall Trough','fontsize',16)

% plot linear fit to deep layer (400 m)
P = polyfit(salt_RT([15],:),temp_RT([15],:),1);
ss = 35.15:0.05:35.55;
tt = polyval(P,ss);
plot(ss,tt,'--k')

% for RT:
% T/S correlation: 100m = 0.39; 200m 0.63; 400m = 0.72; 800m = 0.82 (N=2050)

% for NS:
% T/S correlation: 100m = 0.69; 200m 0.55; 400m = 0.53; 800m = 0.13 (N=2438)
% low correlation at depth probably due to small variations


%% Examine heat and salt content for the two regions
% first NS
yr_beg = 1950;
date_beg = datenum(yr_beg,1,1); date_end = datenum(2022,12,31);
J = date_NS > date_beg & date_NS < date_end;
% nd = [7 9 11 13:19];   % 25 = 800 m depth;
% S_NS = salt_NS(nd,J); T_NS = temp_NS(nd,J); dates_NS = date_NS(J);
% mean_S_NS = nanmean(S_NS,1); mean_T_NS = nanmean(T_NS,1); D_NS = dyn_NS(15,J);
lon_chk = lon_NS(J);
lat_chk = lat_NS(J);

mean_T_NS = sum_Z(dpth,temp_NS(:,J))/dpth(25);
mean_S_NS = sum_Z(dpth,salt_NS(:,J))/dpth(25);

figure(20)
subplot(3,1,1)
q = plot(date_NS(J),mean_T_NS,'.','markersize',0.5,'color',[0.5 0.5 0.5])
ylim([0 6])
grid on
datetick('x',10)
%
[yearNS,mean_tmpr_NS] = annual_avg(date_NS(J),mean_T_NS,1);
%
hold on
plot(yearNS+0.5,mean_tmpr_NS,'b*')
ylabel('temperature','fontsize',18)
% title('Norwegian Sea','fontsize',18)
subplot(3,1,2)
plot(date_NS(J),mean_S_NS,'.','markersize',0.5,'color',[0.5 0.5 0.5])
ylim([34.7 35.1])
grid on
datetick('x',10)
%
[yearNS,mean_salt_NS] = annual_avg(date_NS(J),mean_S_NS,1);
%
hold on
plot(yearNS+0.5,mean_salt_NS,'b*')
ylabel('salinity','fontsize',18)
subplot(3,1,3)
J = date_year_NS > date_beg;
semilogy(date_year_NS(J),N_NS(J),'b*','markersize',10)
% ssh_years = datenum(yr_beg:2018,7,1);
% plot(ssh_years,mn_dyn_NS(yr_beg:2018),'k*')
ylim([1 200])
grid on
datetick('x',10)
% xlabel('year','fontsize',18)
ylabel('N','fontsize',18)

if 0
    figure(21)
    run sig_tau.m
    hold on
    plot(mean_S_NS,mean_T_NS,'k*')
    axis([34.7 35.2 0 5])
    grid on
    P = polyfit(mean_S_NS,mean_T_NS,1);
    T_fit = polyval(P,[34.82 35.08]);
    % plot([34.75 35.08],T_fit,'--k','linewidth',2)
    R=corrcoef(diff(mean_S_NS),diff(mean_T_NS))  % 0.62
    hold off
end



%% second, Rockall Trough
yr_beg = 1950;
date_beg = datenum(yr_beg,1,1); date_end = datenum(2022,12,31);
J = date_RT > date_beg & date_RT < date_end;
% nd = [7 9 11 13:19];   % 25 = 800 m depth;
% S_RT = salt_RT(nd,J); T_RT = temp_RT(nd,J); dates_RT = date_RT(J);
% mean_S_RT = nanmean(S_RT,1); mean_T_RT = nanmean(T_RT,1); D_RT = dyn_RT(15,J);
lon_chk = lon_RT(J);
lat_chk = lat_RT(J);

mean_T_RT = sum_Z(dpth,temp_RT(:,J))/dpth(25);
mean_S_RT = sum_Z(dpth,salt_RT(:,J))/dpth(25);

figure(22)
subplot(3,1,1)
plot(date_RT(J),mean_T_RT,'.','markersize',0.5,'color',[0.5 0.5 0.5])
ylim([7 12])
grid on
datetick('x',10)
%
[yearRT,mean_tmpr_RT] = annual_avg(date_RT(J),mean_T_RT,1);
%
hold on
plot(yearRT+0.5,mean_tmpr_RT,'*','color',[1 0 0])
ylabel('temperature','fontsize',18)
%title('Rockall Trough','fontsize',18)

subplot(3,1,2)
plot(date_RT(J),mean_S_RT,'.','markersize',0.5,'color',[0.5 0.5 0.5])
ylim([35.1 35.6])
grid on
datetick('x',10)
%
[yearRT,mean_salt_RT] = annual_avg(date_RT(J),mean_S_RT,1);
%
hold on
plot(yearRT+0.5,mean_salt_RT,'*','color',[1 0 0])
ylabel('salinity','fontsize',18)
subplot(3,1,3)
J = date_year_RT > date_beg;
semilogy(date_year_RT(J),N_RT(J),'r*','markersize',10)
axis([datemin datemax 1 200])
datetick('x',10)
grid on
xlabel('year','fontsize',18)
ylabel('N','fontsize',18)
return

if 0
    figure(23)
    run sig_tau.m
    hold on
    plot(mean_S_RT,mean_T_RT,'k*')
    axis([35.1 35.6 7.5 12.5])
    grid on
    P = polyfit(mean_S_RT,mean_T_RT,1);
    T_fit = polyval(P,[35.15 35.45]);
    plot([35.15 35.45],T_fit,'--k','linewidth',2)
    R=corrcoef(mean_S_RT,mean_T_RT)  % 0.61
    hold off
end


%%
figure(14)
date_beg = datenum(1993,1,1); date_end = datenum(2022,12,31);
xlim([date_beg date_end])
ylim([-0.2 0.6])

load /System/Volumes/Data/MATLAB_VI/Norrona/ICES_Hydro/ssh_adj % dates mn_ssh_NS mn_ssh_RT NS_adj RT_adj
% the difference in altimetric ssh = -0.4101 -(-0.0716) = 0.3385
% so let's superimpose ssh_NS on dyn_hgt_NS and add the above difference to
% the RT dyn-hgt.
hold on
plot(dates,RT_adj + 0.1322 + 0.3385,'*-k', dates, NS_adj + 0.1322,'*-k')
ylim([0 0.6])
